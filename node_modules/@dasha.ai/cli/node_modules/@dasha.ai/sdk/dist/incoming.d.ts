import * as EventEmitter from "eventemitter3";
import * as errors from "./errors";
/**
 * An object that manages the incoming conversation requests.
 *
 * @see {@link Application.incoming}
 *
 * It has a `request` event, with arguments being and `endpoint` string,
 * and an `additionalInfo` string.
 *
 * @example handling a simple incoming request
 * ```typescript
 * application.incoming.on("request", async (endpoint) => {
 *   const conversation = application.createConversation({ endpoint });
 *   await conversation.execute();
 * });
 * ```
 */
export declare class IncomingRequestManager<TInput extends Record<string, unknown>, TOutput extends Record<string, unknown>> extends EventEmitter<{
    error: [error: errors.Error];
    request: [endpoint: string, additionalInfo: string];
}> {
    private _log;
    private _application;
    private _isDisposed;
    private _handleAudioClientInviteRequest;
}
