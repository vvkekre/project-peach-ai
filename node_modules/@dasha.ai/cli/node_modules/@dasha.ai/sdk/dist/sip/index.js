"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports._extractSipInfo = exports.Endpoint = exports.connect = exports.SipConnection = exports.outboundConfigs = exports.inboundConfigs = void 0;
exports.inboundConfigs = require("./inbound-configs");
exports.outboundConfigs = require("./outbound-configs");
/** @internal */
class SipConnection {
    /** @internal */
    constructor(sessionConfig) {
        this._sessionConfig = sessionConfig;
    }
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    /** @internal */ _init(jobId) {
        // sic
    }
}
exports.SipConnection = SipConnection;
function connect(endpoint) {
    return new SipConnection(endpoint._sessionConfig);
}
exports.connect = connect;
class Endpoint {
    constructor(name, options) {
        const defaultSessionConfig = {
            type: "audio",
            channel: {
                type: "sip",
                configName: name,
            },
            stt: {
                configName: "Default",
            },
            tts: {
                type: "synthesized",
                configName: "Default",
            },
            vad: { interlocutorPauseDelay: 0.8 },
            saveLog: true,
            noiseVolume: 0,
        };
        this._sessionConfig = Object.assign(Object.assign({}, defaultSessionConfig), options);
    }
}
exports.Endpoint = Endpoint;
/** @internal */
function _extractSipInfo(jobData) {
    const isObject = (x) => typeof x === "object" && x !== null;
    if (!isObject(jobData.Sip))
        return undefined;
    return {
        fromUser: String(jobData.Sip.FromUser),
        fromDomain: String(jobData.Sip.FromDomain),
        toUser: String(jobData.Sip.ToUser),
        toDomain: String(jobData.Sip.ToDomain),
    };
}
exports._extractSipInfo = _extractSipInfo;
//# sourceMappingURL=index.js.map