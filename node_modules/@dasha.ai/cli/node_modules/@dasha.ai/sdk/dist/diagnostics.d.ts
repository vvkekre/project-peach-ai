import { Account } from "./account";
export interface LimitInformation {
    current: number | null;
    limit: number | null;
}
export interface Limits {
    customer: LimitInformation;
    groups: Record<string, LimitInformation | undefined> | null;
    instances: Record<string, LimitInformation | undefined> | null;
    applicationGroups: ApplicationGroupLimit[] | null;
}
export interface ApplicationGroupLimit {
    applicationName: string | null;
    groupId: string;
    information: LimitInformation;
}
export interface QueuesInformation {
    customerLength: number | null;
    groupLengths: Record<string, number | undefined>;
    instances: Record<string, QueueInstanceDiagnostic | undefined>;
    applicationGroups: ApplicationGroupQueue[];
}
export interface QueueInstanceDiagnostic {
    pendingLength: number | null;
    activeLength: number | null;
}
export interface ApplicationGroupQueue {
    applicationName: string;
    groupId: string;
    length: number | null;
}
export declare function getLimits(options?: {
    account?: Account;
}): Promise<Limits>;
export declare function getQueueStates(options?: {
    account?: Account;
}): Promise<QueuesInformation>;
