/**
 * Dasha.AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { SttEntryPatchDTO } from '../models';
import { SttEntryRequestDTO } from '../models';
import { SttEntryResponseDTO } from '../models';
import { SttEntryWeightPatchDTO } from '../models';
import { SttEntryWeightRequestDTO } from '../models';
import { SttEntryWeightResponseDTO } from '../models';
import { SttGroupPatchDTO } from '../models';
import { SttGroupRequestDTO } from '../models';
import { SttGroupResponseDTO } from '../models';
/**
 * SttApi - axios parameter creator
 * @export
 */
export declare const SttApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttEntriesIdDelete: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttEntriesIdGet: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {SttEntryPatchDTO} [sttEntryPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttEntriesIdPatch: (id: string, sttEntryPatchDTO?: SttEntryPatchDTO | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {SttEntryRequestDTO} [sttEntryRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttEntriesPost: (sttEntryRequestDTO?: SttEntryRequestDTO | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {SttEntryWeightRequestDTO} [sttEntryWeightRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttEntriesWeightPost: (sttEntryWeightRequestDTO?: SttEntryWeightRequestDTO | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsGet: (names?: string[] | undefined, skip?: number | undefined, take?: number | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsIdDelete: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsIdEntriesGet: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsIdGet: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {SttGroupPatchDTO} [sttGroupPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsIdPatch: (id: string, sttGroupPatchDTO?: SttGroupPatchDTO | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {SttGroupRequestDTO} [sttGroupRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsPost: (sttGroupRequestDTO?: SttGroupRequestDTO | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} customerId
     * @param {string} sttGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdCustomersCustomerIdAccessDelete: (customerId: string, sttGroupId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} customerId
     * @param {string} sttGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdCustomersCustomerIdAccessGet: (customerId: string, sttGroupId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} customerId
     * @param {string} sttGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdCustomersCustomerIdAccessPost: (customerId: string, sttGroupId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} sttGroupId
     * @param {string} sttEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdEntriesSttEntryIdWeightDelete: (sttGroupId: string, sttEntryId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} sttGroupId
     * @param {string} sttEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdEntriesSttEntryIdWeightGet: (sttGroupId: string, sttEntryId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} sttGroupId
     * @param {string} sttEntryId
     * @param {SttEntryWeightPatchDTO} [sttEntryWeightPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdEntriesSttEntryIdWeightPatch: (sttGroupId: string, sttEntryId: string, sttEntryWeightPatchDTO?: SttEntryWeightPatchDTO | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SttGroupsGet: (names?: string[] | undefined, skip?: number | undefined, take?: number | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SttGroupsIdGet: (id: string, options?: any) => Promise<RequestArgs>;
};
/**
 * SttApi - functional programming interface
 * @export
 */
export declare const SttApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttEntriesIdDelete(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttEntriesIdGet(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SttEntryResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {SttEntryPatchDTO} [sttEntryPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttEntriesIdPatch(id: string, sttEntryPatchDTO?: SttEntryPatchDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SttEntryResponseDTO>>;
    /**
     *
     * @param {SttEntryRequestDTO} [sttEntryRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttEntriesPost(sttEntryRequestDTO?: SttEntryRequestDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SttEntryResponseDTO>>;
    /**
     *
     * @param {SttEntryWeightRequestDTO} [sttEntryWeightRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttEntriesWeightPost(sttEntryWeightRequestDTO?: SttEntryWeightRequestDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SttEntryWeightResponseDTO>>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsGet(names?: string[] | undefined, skip?: number | undefined, take?: number | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Array<SttGroupResponseDTO>>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsIdDelete(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsIdEntriesGet(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Array<SttEntryWeightResponseDTO>>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsIdGet(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SttGroupResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {SttGroupPatchDTO} [sttGroupPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsIdPatch(id: string, sttGroupPatchDTO?: SttGroupPatchDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SttGroupResponseDTO>>;
    /**
     *
     * @param {SttGroupRequestDTO} [sttGroupRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsPost(sttGroupRequestDTO?: SttGroupRequestDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SttGroupResponseDTO>>;
    /**
     *
     * @param {string} customerId
     * @param {string} sttGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdCustomersCustomerIdAccessDelete(customerId: string, sttGroupId: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     *
     * @param {string} customerId
     * @param {string} sttGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdCustomersCustomerIdAccessGet(customerId: string, sttGroupId: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>>;
    /**
     *
     * @param {string} customerId
     * @param {string} sttGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdCustomersCustomerIdAccessPost(customerId: string, sttGroupId: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>>;
    /**
     *
     * @param {string} sttGroupId
     * @param {string} sttEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdEntriesSttEntryIdWeightDelete(sttGroupId: string, sttEntryId: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     *
     * @param {string} sttGroupId
     * @param {string} sttEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdEntriesSttEntryIdWeightGet(sttGroupId: string, sttEntryId: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SttEntryWeightResponseDTO>>;
    /**
     *
     * @param {string} sttGroupId
     * @param {string} sttEntryId
     * @param {SttEntryWeightPatchDTO} [sttEntryWeightPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdEntriesSttEntryIdWeightPatch(sttGroupId: string, sttEntryId: string, sttEntryWeightPatchDTO?: SttEntryWeightPatchDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<number>>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SttGroupsGet(names?: string[] | undefined, skip?: number | undefined, take?: number | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Array<SttGroupResponseDTO>>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SttGroupsIdGet(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SttGroupResponseDTO>>;
};
/**
 * SttApi - factory interface
 * @export
 */
export declare const SttApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttEntriesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttEntriesIdGet(id: string, options?: any): AxiosPromise<SttEntryResponseDTO>;
    /**
     *
     * @param {string} id
     * @param {SttEntryPatchDTO} [sttEntryPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttEntriesIdPatch(id: string, sttEntryPatchDTO?: SttEntryPatchDTO | undefined, options?: any): AxiosPromise<SttEntryResponseDTO>;
    /**
     *
     * @param {SttEntryRequestDTO} [sttEntryRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttEntriesPost(sttEntryRequestDTO?: SttEntryRequestDTO | undefined, options?: any): AxiosPromise<SttEntryResponseDTO>;
    /**
     *
     * @param {SttEntryWeightRequestDTO} [sttEntryWeightRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttEntriesWeightPost(sttEntryWeightRequestDTO?: SttEntryWeightRequestDTO | undefined, options?: any): AxiosPromise<SttEntryWeightResponseDTO>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsGet(names?: string[] | undefined, skip?: number | undefined, take?: number | undefined, options?: any): AxiosPromise<Array<SttGroupResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsIdEntriesGet(id: string, options?: any): AxiosPromise<Array<SttEntryWeightResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsIdGet(id: string, options?: any): AxiosPromise<SttGroupResponseDTO>;
    /**
     *
     * @param {string} id
     * @param {SttGroupPatchDTO} [sttGroupPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsIdPatch(id: string, sttGroupPatchDTO?: SttGroupPatchDTO | undefined, options?: any): AxiosPromise<SttGroupResponseDTO>;
    /**
     *
     * @param {SttGroupRequestDTO} [sttGroupRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsPost(sttGroupRequestDTO?: SttGroupRequestDTO | undefined, options?: any): AxiosPromise<SttGroupResponseDTO>;
    /**
     *
     * @param {string} customerId
     * @param {string} sttGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdCustomersCustomerIdAccessDelete(customerId: string, sttGroupId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} customerId
     * @param {string} sttGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdCustomersCustomerIdAccessGet(customerId: string, sttGroupId: string, options?: any): AxiosPromise<boolean>;
    /**
     *
     * @param {string} customerId
     * @param {string} sttGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdCustomersCustomerIdAccessPost(customerId: string, sttGroupId: string, options?: any): AxiosPromise<boolean>;
    /**
     *
     * @param {string} sttGroupId
     * @param {string} sttEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdEntriesSttEntryIdWeightDelete(sttGroupId: string, sttEntryId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} sttGroupId
     * @param {string} sttEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdEntriesSttEntryIdWeightGet(sttGroupId: string, sttEntryId: string, options?: any): AxiosPromise<SttEntryWeightResponseDTO>;
    /**
     *
     * @param {string} sttGroupId
     * @param {string} sttEntryId
     * @param {SttEntryWeightPatchDTO} [sttEntryWeightPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementSttGroupsSttGroupIdEntriesSttEntryIdWeightPatch(sttGroupId: string, sttEntryId: string, sttEntryWeightPatchDTO?: SttEntryWeightPatchDTO | undefined, options?: any): AxiosPromise<number>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SttGroupsGet(names?: string[] | undefined, skip?: number | undefined, take?: number | undefined, options?: any): AxiosPromise<Array<SttGroupResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SttGroupsIdGet(id: string, options?: any): AxiosPromise<SttGroupResponseDTO>;
};
/**
 * SttApi - object-oriented interface
 * @export
 * @class SttApi
 * @extends {BaseAPI}
 */
export declare class SttApi extends BaseAPI {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttEntriesIdDelete(id: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttEntriesIdGet(id: string, options?: any): Promise<import("axios").AxiosResponse<SttEntryResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {SttEntryPatchDTO} [sttEntryPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttEntriesIdPatch(id: string, sttEntryPatchDTO?: SttEntryPatchDTO, options?: any): Promise<import("axios").AxiosResponse<SttEntryResponseDTO>>;
    /**
     *
     * @param {SttEntryRequestDTO} [sttEntryRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttEntriesPost(sttEntryRequestDTO?: SttEntryRequestDTO, options?: any): Promise<import("axios").AxiosResponse<SttEntryResponseDTO>>;
    /**
     *
     * @param {SttEntryWeightRequestDTO} [sttEntryWeightRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttEntriesWeightPost(sttEntryWeightRequestDTO?: SttEntryWeightRequestDTO, options?: any): Promise<import("axios").AxiosResponse<SttEntryWeightResponseDTO>>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttGroupsGet(names?: Array<string>, skip?: number, take?: number, options?: any): Promise<import("axios").AxiosResponse<SttGroupResponseDTO[]>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttGroupsIdDelete(id: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttGroupsIdEntriesGet(id: string, options?: any): Promise<import("axios").AxiosResponse<SttEntryWeightResponseDTO[]>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttGroupsIdGet(id: string, options?: any): Promise<import("axios").AxiosResponse<SttGroupResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {SttGroupPatchDTO} [sttGroupPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttGroupsIdPatch(id: string, sttGroupPatchDTO?: SttGroupPatchDTO, options?: any): Promise<import("axios").AxiosResponse<SttGroupResponseDTO>>;
    /**
     *
     * @param {SttGroupRequestDTO} [sttGroupRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttGroupsPost(sttGroupRequestDTO?: SttGroupRequestDTO, options?: any): Promise<import("axios").AxiosResponse<SttGroupResponseDTO>>;
    /**
     *
     * @param {string} customerId
     * @param {string} sttGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttGroupsSttGroupIdCustomersCustomerIdAccessDelete(customerId: string, sttGroupId: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     *
     * @param {string} customerId
     * @param {string} sttGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttGroupsSttGroupIdCustomersCustomerIdAccessGet(customerId: string, sttGroupId: string, options?: any): Promise<import("axios").AxiosResponse<boolean>>;
    /**
     *
     * @param {string} customerId
     * @param {string} sttGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttGroupsSttGroupIdCustomersCustomerIdAccessPost(customerId: string, sttGroupId: string, options?: any): Promise<import("axios").AxiosResponse<boolean>>;
    /**
     *
     * @param {string} sttGroupId
     * @param {string} sttEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttGroupsSttGroupIdEntriesSttEntryIdWeightDelete(sttGroupId: string, sttEntryId: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     *
     * @param {string} sttGroupId
     * @param {string} sttEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttGroupsSttGroupIdEntriesSttEntryIdWeightGet(sttGroupId: string, sttEntryId: string, options?: any): Promise<import("axios").AxiosResponse<SttEntryWeightResponseDTO>>;
    /**
     *
     * @param {string} sttGroupId
     * @param {string} sttEntryId
     * @param {SttEntryWeightPatchDTO} [sttEntryWeightPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1ManagementSttGroupsSttGroupIdEntriesSttEntryIdWeightPatch(sttGroupId: string, sttEntryId: string, sttEntryWeightPatchDTO?: SttEntryWeightPatchDTO, options?: any): Promise<import("axios").AxiosResponse<number>>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1SttGroupsGet(names?: Array<string>, skip?: number, take?: number, options?: any): Promise<import("axios").AxiosResponse<SttGroupResponseDTO[]>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SttApi
     */
    apiV1SttGroupsIdGet(id: string, options?: any): Promise<import("axios").AxiosResponse<SttGroupResponseDTO>>;
}
