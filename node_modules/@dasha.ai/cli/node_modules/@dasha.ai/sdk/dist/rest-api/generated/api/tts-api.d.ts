/**
 * Dasha.AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { TtsEntryPatchDTO } from '../models';
import { TtsEntryRequestDTO } from '../models';
import { TtsEntryResponseDTO } from '../models';
import { TtsEntryWeightPatchDTO } from '../models';
import { TtsEntryWeightRequestDTO } from '../models';
import { TtsEntryWeightResponseDTO } from '../models';
import { TtsGroupPatchDTO } from '../models';
import { TtsGroupRequestDTO } from '../models';
import { TtsGroupResponseDTO } from '../models';
import { TtsSynthesisRequestDTO } from '../models';
/**
 * TtsApi - axios parameter creator
 * @export
 */
export declare const TtsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsEntriesIdDelete: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsEntriesIdGet: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {TtsEntryPatchDTO} [ttsEntryPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsEntriesIdPatch: (id: string, ttsEntryPatchDTO?: TtsEntryPatchDTO | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {TtsEntryRequestDTO} [ttsEntryRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsEntriesPost: (ttsEntryRequestDTO?: TtsEntryRequestDTO | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {TtsEntryWeightRequestDTO} [ttsEntryWeightRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsEntriesWeightPost: (ttsEntryWeightRequestDTO?: TtsEntryWeightRequestDTO | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsGet: (names?: string[] | undefined, skip?: number | undefined, take?: number | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsIdDelete: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsIdEntriesGet: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsIdGet: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {TtsGroupPatchDTO} [ttsGroupPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsIdPatch: (id: string, ttsGroupPatchDTO?: TtsGroupPatchDTO | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {TtsGroupRequestDTO} [ttsGroupRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsPost: (ttsGroupRequestDTO?: TtsGroupRequestDTO | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} customerId
     * @param {string} ttsGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdCustomersCustomerIdAccessDelete: (customerId: string, ttsGroupId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} customerId
     * @param {string} ttsGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdCustomersCustomerIdAccessGet: (customerId: string, ttsGroupId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} customerId
     * @param {string} ttsGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdCustomersCustomerIdAccessPost: (customerId: string, ttsGroupId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} ttsGroupId
     * @param {string} ttsEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdEntriesTtsEntryIdWeightDelete: (ttsGroupId: string, ttsEntryId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} ttsGroupId
     * @param {string} ttsEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdEntriesTtsEntryIdWeightGet: (ttsGroupId: string, ttsEntryId: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} ttsGroupId
     * @param {string} ttsEntryId
     * @param {TtsEntryWeightPatchDTO} [ttsEntryWeightPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdEntriesTtsEntryIdWeightPatch: (ttsGroupId: string, ttsEntryId: string, ttsEntryWeightPatchDTO?: TtsEntryWeightPatchDTO | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsGroupsGet: (names?: string[] | undefined, skip?: number | undefined, take?: number | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsGroupsIdGet: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {TtsSynthesisRequestDTO} [ttsSynthesisRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsSynthesisPost: (ttsSynthesisRequestDTO?: TtsSynthesisRequestDTO | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * TtsApi - functional programming interface
 * @export
 */
export declare const TtsApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsEntriesIdDelete(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsEntriesIdGet(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TtsEntryResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {TtsEntryPatchDTO} [ttsEntryPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsEntriesIdPatch(id: string, ttsEntryPatchDTO?: TtsEntryPatchDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TtsEntryResponseDTO>>;
    /**
     *
     * @param {TtsEntryRequestDTO} [ttsEntryRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsEntriesPost(ttsEntryRequestDTO?: TtsEntryRequestDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TtsEntryResponseDTO>>;
    /**
     *
     * @param {TtsEntryWeightRequestDTO} [ttsEntryWeightRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsEntriesWeightPost(ttsEntryWeightRequestDTO?: TtsEntryWeightRequestDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TtsEntryWeightResponseDTO>>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsGet(names?: string[] | undefined, skip?: number | undefined, take?: number | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Array<TtsGroupResponseDTO>>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsIdDelete(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsIdEntriesGet(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Array<TtsEntryWeightResponseDTO>>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsIdGet(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TtsGroupResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {TtsGroupPatchDTO} [ttsGroupPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsIdPatch(id: string, ttsGroupPatchDTO?: TtsGroupPatchDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TtsGroupResponseDTO>>;
    /**
     *
     * @param {TtsGroupRequestDTO} [ttsGroupRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsPost(ttsGroupRequestDTO?: TtsGroupRequestDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TtsGroupResponseDTO>>;
    /**
     *
     * @param {string} customerId
     * @param {string} ttsGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdCustomersCustomerIdAccessDelete(customerId: string, ttsGroupId: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     *
     * @param {string} customerId
     * @param {string} ttsGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdCustomersCustomerIdAccessGet(customerId: string, ttsGroupId: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>>;
    /**
     *
     * @param {string} customerId
     * @param {string} ttsGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdCustomersCustomerIdAccessPost(customerId: string, ttsGroupId: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>>;
    /**
     *
     * @param {string} ttsGroupId
     * @param {string} ttsEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdEntriesTtsEntryIdWeightDelete(ttsGroupId: string, ttsEntryId: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     *
     * @param {string} ttsGroupId
     * @param {string} ttsEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdEntriesTtsEntryIdWeightGet(ttsGroupId: string, ttsEntryId: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TtsEntryWeightResponseDTO>>;
    /**
     *
     * @param {string} ttsGroupId
     * @param {string} ttsEntryId
     * @param {TtsEntryWeightPatchDTO} [ttsEntryWeightPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdEntriesTtsEntryIdWeightPatch(ttsGroupId: string, ttsEntryId: string, ttsEntryWeightPatchDTO?: TtsEntryWeightPatchDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<number>>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsGroupsGet(names?: string[] | undefined, skip?: number | undefined, take?: number | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Array<TtsGroupResponseDTO>>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsGroupsIdGet(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TtsGroupResponseDTO>>;
    /**
     *
     * @param {TtsSynthesisRequestDTO} [ttsSynthesisRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsSynthesisPost(ttsSynthesisRequestDTO?: TtsSynthesisRequestDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
};
/**
 * TtsApi - factory interface
 * @export
 */
export declare const TtsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsEntriesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsEntriesIdGet(id: string, options?: any): AxiosPromise<TtsEntryResponseDTO>;
    /**
     *
     * @param {string} id
     * @param {TtsEntryPatchDTO} [ttsEntryPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsEntriesIdPatch(id: string, ttsEntryPatchDTO?: TtsEntryPatchDTO | undefined, options?: any): AxiosPromise<TtsEntryResponseDTO>;
    /**
     *
     * @param {TtsEntryRequestDTO} [ttsEntryRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsEntriesPost(ttsEntryRequestDTO?: TtsEntryRequestDTO | undefined, options?: any): AxiosPromise<TtsEntryResponseDTO>;
    /**
     *
     * @param {TtsEntryWeightRequestDTO} [ttsEntryWeightRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsEntriesWeightPost(ttsEntryWeightRequestDTO?: TtsEntryWeightRequestDTO | undefined, options?: any): AxiosPromise<TtsEntryWeightResponseDTO>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsGet(names?: string[] | undefined, skip?: number | undefined, take?: number | undefined, options?: any): AxiosPromise<Array<TtsGroupResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsIdEntriesGet(id: string, options?: any): AxiosPromise<Array<TtsEntryWeightResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsIdGet(id: string, options?: any): AxiosPromise<TtsGroupResponseDTO>;
    /**
     *
     * @param {string} id
     * @param {TtsGroupPatchDTO} [ttsGroupPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsIdPatch(id: string, ttsGroupPatchDTO?: TtsGroupPatchDTO | undefined, options?: any): AxiosPromise<TtsGroupResponseDTO>;
    /**
     *
     * @param {TtsGroupRequestDTO} [ttsGroupRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsPost(ttsGroupRequestDTO?: TtsGroupRequestDTO | undefined, options?: any): AxiosPromise<TtsGroupResponseDTO>;
    /**
     *
     * @param {string} customerId
     * @param {string} ttsGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdCustomersCustomerIdAccessDelete(customerId: string, ttsGroupId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} customerId
     * @param {string} ttsGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdCustomersCustomerIdAccessGet(customerId: string, ttsGroupId: string, options?: any): AxiosPromise<boolean>;
    /**
     *
     * @param {string} customerId
     * @param {string} ttsGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdCustomersCustomerIdAccessPost(customerId: string, ttsGroupId: string, options?: any): AxiosPromise<boolean>;
    /**
     *
     * @param {string} ttsGroupId
     * @param {string} ttsEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdEntriesTtsEntryIdWeightDelete(ttsGroupId: string, ttsEntryId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} ttsGroupId
     * @param {string} ttsEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdEntriesTtsEntryIdWeightGet(ttsGroupId: string, ttsEntryId: string, options?: any): AxiosPromise<TtsEntryWeightResponseDTO>;
    /**
     *
     * @param {string} ttsGroupId
     * @param {string} ttsEntryId
     * @param {TtsEntryWeightPatchDTO} [ttsEntryWeightPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagementTtsGroupsTtsGroupIdEntriesTtsEntryIdWeightPatch(ttsGroupId: string, ttsEntryId: string, ttsEntryWeightPatchDTO?: TtsEntryWeightPatchDTO | undefined, options?: any): AxiosPromise<number>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsGroupsGet(names?: string[] | undefined, skip?: number | undefined, take?: number | undefined, options?: any): AxiosPromise<Array<TtsGroupResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsGroupsIdGet(id: string, options?: any): AxiosPromise<TtsGroupResponseDTO>;
    /**
     *
     * @param {TtsSynthesisRequestDTO} [ttsSynthesisRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsSynthesisPost(ttsSynthesisRequestDTO?: TtsSynthesisRequestDTO | undefined, options?: any): AxiosPromise<void>;
};
/**
 * TtsApi - object-oriented interface
 * @export
 * @class TtsApi
 * @extends {BaseAPI}
 */
export declare class TtsApi extends BaseAPI {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsEntriesIdDelete(id: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsEntriesIdGet(id: string, options?: any): Promise<import("axios").AxiosResponse<TtsEntryResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {TtsEntryPatchDTO} [ttsEntryPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsEntriesIdPatch(id: string, ttsEntryPatchDTO?: TtsEntryPatchDTO, options?: any): Promise<import("axios").AxiosResponse<TtsEntryResponseDTO>>;
    /**
     *
     * @param {TtsEntryRequestDTO} [ttsEntryRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsEntriesPost(ttsEntryRequestDTO?: TtsEntryRequestDTO, options?: any): Promise<import("axios").AxiosResponse<TtsEntryResponseDTO>>;
    /**
     *
     * @param {TtsEntryWeightRequestDTO} [ttsEntryWeightRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsEntriesWeightPost(ttsEntryWeightRequestDTO?: TtsEntryWeightRequestDTO, options?: any): Promise<import("axios").AxiosResponse<TtsEntryWeightResponseDTO>>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsGroupsGet(names?: Array<string>, skip?: number, take?: number, options?: any): Promise<import("axios").AxiosResponse<TtsGroupResponseDTO[]>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsGroupsIdDelete(id: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsGroupsIdEntriesGet(id: string, options?: any): Promise<import("axios").AxiosResponse<TtsEntryWeightResponseDTO[]>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsGroupsIdGet(id: string, options?: any): Promise<import("axios").AxiosResponse<TtsGroupResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {TtsGroupPatchDTO} [ttsGroupPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsGroupsIdPatch(id: string, ttsGroupPatchDTO?: TtsGroupPatchDTO, options?: any): Promise<import("axios").AxiosResponse<TtsGroupResponseDTO>>;
    /**
     *
     * @param {TtsGroupRequestDTO} [ttsGroupRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsGroupsPost(ttsGroupRequestDTO?: TtsGroupRequestDTO, options?: any): Promise<import("axios").AxiosResponse<TtsGroupResponseDTO>>;
    /**
     *
     * @param {string} customerId
     * @param {string} ttsGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsGroupsTtsGroupIdCustomersCustomerIdAccessDelete(customerId: string, ttsGroupId: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     *
     * @param {string} customerId
     * @param {string} ttsGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsGroupsTtsGroupIdCustomersCustomerIdAccessGet(customerId: string, ttsGroupId: string, options?: any): Promise<import("axios").AxiosResponse<boolean>>;
    /**
     *
     * @param {string} customerId
     * @param {string} ttsGroupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsGroupsTtsGroupIdCustomersCustomerIdAccessPost(customerId: string, ttsGroupId: string, options?: any): Promise<import("axios").AxiosResponse<boolean>>;
    /**
     *
     * @param {string} ttsGroupId
     * @param {string} ttsEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsGroupsTtsGroupIdEntriesTtsEntryIdWeightDelete(ttsGroupId: string, ttsEntryId: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     *
     * @param {string} ttsGroupId
     * @param {string} ttsEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsGroupsTtsGroupIdEntriesTtsEntryIdWeightGet(ttsGroupId: string, ttsEntryId: string, options?: any): Promise<import("axios").AxiosResponse<TtsEntryWeightResponseDTO>>;
    /**
     *
     * @param {string} ttsGroupId
     * @param {string} ttsEntryId
     * @param {TtsEntryWeightPatchDTO} [ttsEntryWeightPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1ManagementTtsGroupsTtsGroupIdEntriesTtsEntryIdWeightPatch(ttsGroupId: string, ttsEntryId: string, ttsEntryWeightPatchDTO?: TtsEntryWeightPatchDTO, options?: any): Promise<import("axios").AxiosResponse<number>>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1TtsGroupsGet(names?: Array<string>, skip?: number, take?: number, options?: any): Promise<import("axios").AxiosResponse<TtsGroupResponseDTO[]>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1TtsGroupsIdGet(id: string, options?: any): Promise<import("axios").AxiosResponse<TtsGroupResponseDTO>>;
    /**
     *
     * @param {TtsSynthesisRequestDTO} [ttsSynthesisRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1TtsSynthesisPost(ttsSynthesisRequestDTO?: TtsSynthesisRequestDTO, options?: any): Promise<import("axios").AxiosResponse<void>>;
}
