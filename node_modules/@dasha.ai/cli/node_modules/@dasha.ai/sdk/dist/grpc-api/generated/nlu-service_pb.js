"use strict";
// source: nlu-service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();
goog.exportSymbol('proto.dasha.sdk.ListOfString', null, global);
goog.exportSymbol('proto.dasha.sdk.NluServiceCustomIntents', null, global);
goog.exportSymbol('proto.dasha.sdk.NluServiceInitializeRequest', null, global);
goog.exportSymbol('proto.dasha.sdk.NluServiceStatusFailed', null, global);
goog.exportSymbol('proto.dasha.sdk.NluServiceStatusProcessing', null, global);
goog.exportSymbol('proto.dasha.sdk.NluServiceStatusReady', null, global);
goog.exportSymbol('proto.dasha.sdk.NluServiceStatusStream', null, global);
goog.exportSymbol('proto.dasha.sdk.NluServiceStatusStream.StatusCase', null, global);
goog.exportSymbol('proto.dasha.sdk.TextNluServiceDataRecognition', null, global);
goog.exportSymbol('proto.dasha.sdk.TextNluServiceIntentRecognition', null, global);
goog.exportSymbol('proto.dasha.sdk.TextNluServiceRecognition', null, global);
goog.exportSymbol('proto.dasha.sdk.TextNluServiceRecognition.RecognitionCase', null, global);
goog.exportSymbol('proto.dasha.sdk.TextNluServiceRecognitionResponse', null, global);
goog.exportSymbol('proto.dasha.sdk.TextNluServiceRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.NluServiceStatusStream = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.dasha.sdk.NluServiceStatusStream.oneofGroups_);
};
goog.inherits(proto.dasha.sdk.NluServiceStatusStream, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.NluServiceStatusStream.displayName = 'proto.dasha.sdk.NluServiceStatusStream';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.NluServiceStatusProcessing = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dasha.sdk.NluServiceStatusProcessing.repeatedFields_, null);
};
goog.inherits(proto.dasha.sdk.NluServiceStatusProcessing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.NluServiceStatusProcessing.displayName = 'proto.dasha.sdk.NluServiceStatusProcessing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.NluServiceStatusFailed = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.NluServiceStatusFailed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.NluServiceStatusFailed.displayName = 'proto.dasha.sdk.NluServiceStatusFailed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.NluServiceStatusReady = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.NluServiceStatusReady, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.NluServiceStatusReady.displayName = 'proto.dasha.sdk.NluServiceStatusReady';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.TextNluServiceRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dasha.sdk.TextNluServiceRequest.repeatedFields_, null);
};
goog.inherits(proto.dasha.sdk.TextNluServiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.TextNluServiceRequest.displayName = 'proto.dasha.sdk.TextNluServiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.TextNluServiceRecognitionResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dasha.sdk.TextNluServiceRecognitionResponse.repeatedFields_, null);
};
goog.inherits(proto.dasha.sdk.TextNluServiceRecognitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.TextNluServiceRecognitionResponse.displayName = 'proto.dasha.sdk.TextNluServiceRecognitionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.TextNluServiceRecognition = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.dasha.sdk.TextNluServiceRecognition.oneofGroups_);
};
goog.inherits(proto.dasha.sdk.TextNluServiceRecognition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.TextNluServiceRecognition.displayName = 'proto.dasha.sdk.TextNluServiceRecognition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.TextNluServiceDataRecognition = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.TextNluServiceDataRecognition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.TextNluServiceDataRecognition.displayName = 'proto.dasha.sdk.TextNluServiceDataRecognition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.TextNluServiceIntentRecognition = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.TextNluServiceIntentRecognition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.TextNluServiceIntentRecognition.displayName = 'proto.dasha.sdk.TextNluServiceIntentRecognition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.NluServiceInitializeRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.NluServiceInitializeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.NluServiceInitializeRequest.displayName = 'proto.dasha.sdk.NluServiceInitializeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.NluServiceCustomIntents = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.NluServiceCustomIntents, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.NluServiceCustomIntents.displayName = 'proto.dasha.sdk.NluServiceCustomIntents';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.ListOfString = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dasha.sdk.ListOfString.repeatedFields_, null);
};
goog.inherits(proto.dasha.sdk.ListOfString, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.ListOfString.displayName = 'proto.dasha.sdk.ListOfString';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.dasha.sdk.NluServiceStatusStream.oneofGroups_ = [[1, 2, 3]];
/**
 * @enum {number}
 */
proto.dasha.sdk.NluServiceStatusStream.StatusCase = {
    STATUS_NOT_SET: 0,
    FAILED: 1,
    PROCESSING: 2,
    READY: 3
};
/**
 * @return {proto.dasha.sdk.NluServiceStatusStream.StatusCase}
 */
proto.dasha.sdk.NluServiceStatusStream.prototype.getStatusCase = function () {
    return /** @type {proto.dasha.sdk.NluServiceStatusStream.StatusCase} */ (jspb.Message.computeOneofCase(this, proto.dasha.sdk.NluServiceStatusStream.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.NluServiceStatusStream.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.NluServiceStatusStream.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.NluServiceStatusStream} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.NluServiceStatusStream.toObject = function (includeInstance, msg) {
        var f, obj = {
            failed: (f = msg.getFailed()) && proto.dasha.sdk.NluServiceStatusFailed.toObject(includeInstance, f),
            processing: (f = msg.getProcessing()) && proto.dasha.sdk.NluServiceStatusProcessing.toObject(includeInstance, f),
            ready: (f = msg.getReady()) && proto.dasha.sdk.NluServiceStatusReady.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.NluServiceStatusStream}
 */
proto.dasha.sdk.NluServiceStatusStream.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.NluServiceStatusStream;
    return proto.dasha.sdk.NluServiceStatusStream.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.NluServiceStatusStream} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.NluServiceStatusStream}
 */
proto.dasha.sdk.NluServiceStatusStream.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.dasha.sdk.NluServiceStatusFailed;
                reader.readMessage(value, proto.dasha.sdk.NluServiceStatusFailed.deserializeBinaryFromReader);
                msg.setFailed(value);
                break;
            case 2:
                var value = new proto.dasha.sdk.NluServiceStatusProcessing;
                reader.readMessage(value, proto.dasha.sdk.NluServiceStatusProcessing.deserializeBinaryFromReader);
                msg.setProcessing(value);
                break;
            case 3:
                var value = new proto.dasha.sdk.NluServiceStatusReady;
                reader.readMessage(value, proto.dasha.sdk.NluServiceStatusReady.deserializeBinaryFromReader);
                msg.setReady(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.NluServiceStatusStream.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.NluServiceStatusStream.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.NluServiceStatusStream} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.NluServiceStatusStream.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getFailed();
    if (f != null) {
        writer.writeMessage(1, f, proto.dasha.sdk.NluServiceStatusFailed.serializeBinaryToWriter);
    }
    f = message.getProcessing();
    if (f != null) {
        writer.writeMessage(2, f, proto.dasha.sdk.NluServiceStatusProcessing.serializeBinaryToWriter);
    }
    f = message.getReady();
    if (f != null) {
        writer.writeMessage(3, f, proto.dasha.sdk.NluServiceStatusReady.serializeBinaryToWriter);
    }
};
/**
 * optional NluServiceStatusFailed failed = 1;
 * @return {?proto.dasha.sdk.NluServiceStatusFailed}
 */
proto.dasha.sdk.NluServiceStatusStream.prototype.getFailed = function () {
    return /** @type{?proto.dasha.sdk.NluServiceStatusFailed} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.NluServiceStatusFailed, 1));
};
/**
 * @param {?proto.dasha.sdk.NluServiceStatusFailed|undefined} value
 * @return {!proto.dasha.sdk.NluServiceStatusStream} returns this
*/
proto.dasha.sdk.NluServiceStatusStream.prototype.setFailed = function (value) {
    return jspb.Message.setOneofWrapperField(this, 1, proto.dasha.sdk.NluServiceStatusStream.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.NluServiceStatusStream} returns this
 */
proto.dasha.sdk.NluServiceStatusStream.prototype.clearFailed = function () {
    return this.setFailed(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.NluServiceStatusStream.prototype.hasFailed = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional NluServiceStatusProcessing processing = 2;
 * @return {?proto.dasha.sdk.NluServiceStatusProcessing}
 */
proto.dasha.sdk.NluServiceStatusStream.prototype.getProcessing = function () {
    return /** @type{?proto.dasha.sdk.NluServiceStatusProcessing} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.NluServiceStatusProcessing, 2));
};
/**
 * @param {?proto.dasha.sdk.NluServiceStatusProcessing|undefined} value
 * @return {!proto.dasha.sdk.NluServiceStatusStream} returns this
*/
proto.dasha.sdk.NluServiceStatusStream.prototype.setProcessing = function (value) {
    return jspb.Message.setOneofWrapperField(this, 2, proto.dasha.sdk.NluServiceStatusStream.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.NluServiceStatusStream} returns this
 */
proto.dasha.sdk.NluServiceStatusStream.prototype.clearProcessing = function () {
    return this.setProcessing(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.NluServiceStatusStream.prototype.hasProcessing = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional NluServiceStatusReady ready = 3;
 * @return {?proto.dasha.sdk.NluServiceStatusReady}
 */
proto.dasha.sdk.NluServiceStatusStream.prototype.getReady = function () {
    return /** @type{?proto.dasha.sdk.NluServiceStatusReady} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.NluServiceStatusReady, 3));
};
/**
 * @param {?proto.dasha.sdk.NluServiceStatusReady|undefined} value
 * @return {!proto.dasha.sdk.NluServiceStatusStream} returns this
*/
proto.dasha.sdk.NluServiceStatusStream.prototype.setReady = function (value) {
    return jspb.Message.setOneofWrapperField(this, 3, proto.dasha.sdk.NluServiceStatusStream.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.NluServiceStatusStream} returns this
 */
proto.dasha.sdk.NluServiceStatusStream.prototype.clearReady = function () {
    return this.setReady(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.NluServiceStatusStream.prototype.hasReady = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dasha.sdk.NluServiceStatusProcessing.repeatedFields_ = [3];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.NluServiceStatusProcessing.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.NluServiceStatusProcessing.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.NluServiceStatusProcessing} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.NluServiceStatusProcessing.toObject = function (includeInstance, msg) {
        var f, obj = {
            percent: jspb.Message.getFieldWithDefault(msg, 1, 0),
            stageDescription: jspb.Message.getFieldWithDefault(msg, 2, ""),
            stageScopeList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
            extraInfoJson: jspb.Message.getFieldWithDefault(msg, 4, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.NluServiceStatusProcessing}
 */
proto.dasha.sdk.NluServiceStatusProcessing.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.NluServiceStatusProcessing;
    return proto.dasha.sdk.NluServiceStatusProcessing.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.NluServiceStatusProcessing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.NluServiceStatusProcessing}
 */
proto.dasha.sdk.NluServiceStatusProcessing.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setPercent(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setStageDescription(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.addStageScope(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setExtraInfoJson(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.NluServiceStatusProcessing.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.NluServiceStatusProcessing.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.NluServiceStatusProcessing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.NluServiceStatusProcessing.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getPercent();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getStageDescription();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getStageScopeList();
    if (f.length > 0) {
        writer.writeRepeatedString(3, f);
    }
    f = message.getExtraInfoJson();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
};
/**
 * optional uint32 percent = 1;
 * @return {number}
 */
proto.dasha.sdk.NluServiceStatusProcessing.prototype.getPercent = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.NluServiceStatusProcessing} returns this
 */
proto.dasha.sdk.NluServiceStatusProcessing.prototype.setPercent = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional string stage_description = 2;
 * @return {string}
 */
proto.dasha.sdk.NluServiceStatusProcessing.prototype.getStageDescription = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.NluServiceStatusProcessing} returns this
 */
proto.dasha.sdk.NluServiceStatusProcessing.prototype.setStageDescription = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * repeated string stage_scope = 3;
 * @return {!Array<string>}
 */
proto.dasha.sdk.NluServiceStatusProcessing.prototype.getStageScopeList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.dasha.sdk.NluServiceStatusProcessing} returns this
 */
proto.dasha.sdk.NluServiceStatusProcessing.prototype.setStageScopeList = function (value) {
    return jspb.Message.setField(this, 3, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dasha.sdk.NluServiceStatusProcessing} returns this
 */
proto.dasha.sdk.NluServiceStatusProcessing.prototype.addStageScope = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dasha.sdk.NluServiceStatusProcessing} returns this
 */
proto.dasha.sdk.NluServiceStatusProcessing.prototype.clearStageScopeList = function () {
    return this.setStageScopeList([]);
};
/**
 * optional string extra_info_json = 4;
 * @return {string}
 */
proto.dasha.sdk.NluServiceStatusProcessing.prototype.getExtraInfoJson = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.NluServiceStatusProcessing} returns this
 */
proto.dasha.sdk.NluServiceStatusProcessing.prototype.setExtraInfoJson = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.NluServiceStatusFailed.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.NluServiceStatusFailed.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.NluServiceStatusFailed} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.NluServiceStatusFailed.toObject = function (includeInstance, msg) {
        var f, obj = {
            reason: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.NluServiceStatusFailed}
 */
proto.dasha.sdk.NluServiceStatusFailed.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.NluServiceStatusFailed;
    return proto.dasha.sdk.NluServiceStatusFailed.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.NluServiceStatusFailed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.NluServiceStatusFailed}
 */
proto.dasha.sdk.NluServiceStatusFailed.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setReason(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.NluServiceStatusFailed.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.NluServiceStatusFailed.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.NluServiceStatusFailed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.NluServiceStatusFailed.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getReason();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string reason = 1;
 * @return {string}
 */
proto.dasha.sdk.NluServiceStatusFailed.prototype.getReason = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.NluServiceStatusFailed} returns this
 */
proto.dasha.sdk.NluServiceStatusFailed.prototype.setReason = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.NluServiceStatusReady.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.NluServiceStatusReady.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.NluServiceStatusReady} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.NluServiceStatusReady.toObject = function (includeInstance, msg) {
        var f, obj = {
            json: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.NluServiceStatusReady}
 */
proto.dasha.sdk.NluServiceStatusReady.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.NluServiceStatusReady;
    return proto.dasha.sdk.NluServiceStatusReady.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.NluServiceStatusReady} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.NluServiceStatusReady}
 */
proto.dasha.sdk.NluServiceStatusReady.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setJson(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.NluServiceStatusReady.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.NluServiceStatusReady.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.NluServiceStatusReady} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.NluServiceStatusReady.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getJson();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string json = 1;
 * @return {string}
 */
proto.dasha.sdk.NluServiceStatusReady.prototype.getJson = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.NluServiceStatusReady} returns this
 */
proto.dasha.sdk.NluServiceStatusReady.prototype.setJson = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dasha.sdk.TextNluServiceRequest.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.TextNluServiceRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.TextNluServiceRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.TextNluServiceRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.TextNluServiceRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            skillsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
            language: jspb.Message.getFieldWithDefault(msg, 2, ""),
            text: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.TextNluServiceRequest}
 */
proto.dasha.sdk.TextNluServiceRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.TextNluServiceRequest;
    return proto.dasha.sdk.TextNluServiceRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.TextNluServiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.TextNluServiceRequest}
 */
proto.dasha.sdk.TextNluServiceRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addSkills(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setLanguage(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setText(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.TextNluServiceRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.TextNluServiceRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.TextNluServiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.TextNluServiceRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getSkillsList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
    f = message.getLanguage();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getText();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
};
/**
 * repeated string skills = 1;
 * @return {!Array<string>}
 */
proto.dasha.sdk.TextNluServiceRequest.prototype.getSkillsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.dasha.sdk.TextNluServiceRequest} returns this
 */
proto.dasha.sdk.TextNluServiceRequest.prototype.setSkillsList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dasha.sdk.TextNluServiceRequest} returns this
 */
proto.dasha.sdk.TextNluServiceRequest.prototype.addSkills = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dasha.sdk.TextNluServiceRequest} returns this
 */
proto.dasha.sdk.TextNluServiceRequest.prototype.clearSkillsList = function () {
    return this.setSkillsList([]);
};
/**
 * optional string language = 2;
 * @return {string}
 */
proto.dasha.sdk.TextNluServiceRequest.prototype.getLanguage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TextNluServiceRequest} returns this
 */
proto.dasha.sdk.TextNluServiceRequest.prototype.setLanguage = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string text = 3;
 * @return {string}
 */
proto.dasha.sdk.TextNluServiceRequest.prototype.getText = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TextNluServiceRequest} returns this
 */
proto.dasha.sdk.TextNluServiceRequest.prototype.setText = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dasha.sdk.TextNluServiceRecognitionResponse.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.TextNluServiceRecognitionResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.TextNluServiceRecognitionResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.TextNluServiceRecognitionResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.TextNluServiceRecognitionResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            recognitionsList: jspb.Message.toObjectList(msg.getRecognitionsList(), proto.dasha.sdk.TextNluServiceRecognition.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.TextNluServiceRecognitionResponse}
 */
proto.dasha.sdk.TextNluServiceRecognitionResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.TextNluServiceRecognitionResponse;
    return proto.dasha.sdk.TextNluServiceRecognitionResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.TextNluServiceRecognitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.TextNluServiceRecognitionResponse}
 */
proto.dasha.sdk.TextNluServiceRecognitionResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.dasha.sdk.TextNluServiceRecognition;
                reader.readMessage(value, proto.dasha.sdk.TextNluServiceRecognition.deserializeBinaryFromReader);
                msg.addRecognitions(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.TextNluServiceRecognitionResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.TextNluServiceRecognitionResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.TextNluServiceRecognitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.TextNluServiceRecognitionResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getRecognitionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.dasha.sdk.TextNluServiceRecognition.serializeBinaryToWriter);
    }
};
/**
 * repeated TextNluServiceRecognition recognitions = 1;
 * @return {!Array<!proto.dasha.sdk.TextNluServiceRecognition>}
 */
proto.dasha.sdk.TextNluServiceRecognitionResponse.prototype.getRecognitionsList = function () {
    return /** @type{!Array<!proto.dasha.sdk.TextNluServiceRecognition>} */ (jspb.Message.getRepeatedWrapperField(this, proto.dasha.sdk.TextNluServiceRecognition, 1));
};
/**
 * @param {!Array<!proto.dasha.sdk.TextNluServiceRecognition>} value
 * @return {!proto.dasha.sdk.TextNluServiceRecognitionResponse} returns this
*/
proto.dasha.sdk.TextNluServiceRecognitionResponse.prototype.setRecognitionsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.dasha.sdk.TextNluServiceRecognition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dasha.sdk.TextNluServiceRecognition}
 */
proto.dasha.sdk.TextNluServiceRecognitionResponse.prototype.addRecognitions = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dasha.sdk.TextNluServiceRecognition, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dasha.sdk.TextNluServiceRecognitionResponse} returns this
 */
proto.dasha.sdk.TextNluServiceRecognitionResponse.prototype.clearRecognitionsList = function () {
    return this.setRecognitionsList([]);
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.dasha.sdk.TextNluServiceRecognition.oneofGroups_ = [[1, 2]];
/**
 * @enum {number}
 */
proto.dasha.sdk.TextNluServiceRecognition.RecognitionCase = {
    RECOGNITION_NOT_SET: 0,
    DATARECOGNITION: 1,
    INTENTRECOGNITION: 2
};
/**
 * @return {proto.dasha.sdk.TextNluServiceRecognition.RecognitionCase}
 */
proto.dasha.sdk.TextNluServiceRecognition.prototype.getRecognitionCase = function () {
    return /** @type {proto.dasha.sdk.TextNluServiceRecognition.RecognitionCase} */ (jspb.Message.computeOneofCase(this, proto.dasha.sdk.TextNluServiceRecognition.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.TextNluServiceRecognition.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.TextNluServiceRecognition.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.TextNluServiceRecognition} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.TextNluServiceRecognition.toObject = function (includeInstance, msg) {
        var f, obj = {
            datarecognition: (f = msg.getDatarecognition()) && proto.dasha.sdk.TextNluServiceDataRecognition.toObject(includeInstance, f),
            intentrecognition: (f = msg.getIntentrecognition()) && proto.dasha.sdk.TextNluServiceIntentRecognition.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.TextNluServiceRecognition}
 */
proto.dasha.sdk.TextNluServiceRecognition.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.TextNluServiceRecognition;
    return proto.dasha.sdk.TextNluServiceRecognition.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.TextNluServiceRecognition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.TextNluServiceRecognition}
 */
proto.dasha.sdk.TextNluServiceRecognition.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.dasha.sdk.TextNluServiceDataRecognition;
                reader.readMessage(value, proto.dasha.sdk.TextNluServiceDataRecognition.deserializeBinaryFromReader);
                msg.setDatarecognition(value);
                break;
            case 2:
                var value = new proto.dasha.sdk.TextNluServiceIntentRecognition;
                reader.readMessage(value, proto.dasha.sdk.TextNluServiceIntentRecognition.deserializeBinaryFromReader);
                msg.setIntentrecognition(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.TextNluServiceRecognition.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.TextNluServiceRecognition.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.TextNluServiceRecognition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.TextNluServiceRecognition.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getDatarecognition();
    if (f != null) {
        writer.writeMessage(1, f, proto.dasha.sdk.TextNluServiceDataRecognition.serializeBinaryToWriter);
    }
    f = message.getIntentrecognition();
    if (f != null) {
        writer.writeMessage(2, f, proto.dasha.sdk.TextNluServiceIntentRecognition.serializeBinaryToWriter);
    }
};
/**
 * optional TextNluServiceDataRecognition dataRecognition = 1;
 * @return {?proto.dasha.sdk.TextNluServiceDataRecognition}
 */
proto.dasha.sdk.TextNluServiceRecognition.prototype.getDatarecognition = function () {
    return /** @type{?proto.dasha.sdk.TextNluServiceDataRecognition} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.TextNluServiceDataRecognition, 1));
};
/**
 * @param {?proto.dasha.sdk.TextNluServiceDataRecognition|undefined} value
 * @return {!proto.dasha.sdk.TextNluServiceRecognition} returns this
*/
proto.dasha.sdk.TextNluServiceRecognition.prototype.setDatarecognition = function (value) {
    return jspb.Message.setOneofWrapperField(this, 1, proto.dasha.sdk.TextNluServiceRecognition.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.TextNluServiceRecognition} returns this
 */
proto.dasha.sdk.TextNluServiceRecognition.prototype.clearDatarecognition = function () {
    return this.setDatarecognition(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.TextNluServiceRecognition.prototype.hasDatarecognition = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional TextNluServiceIntentRecognition intentRecognition = 2;
 * @return {?proto.dasha.sdk.TextNluServiceIntentRecognition}
 */
proto.dasha.sdk.TextNluServiceRecognition.prototype.getIntentrecognition = function () {
    return /** @type{?proto.dasha.sdk.TextNluServiceIntentRecognition} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.TextNluServiceIntentRecognition, 2));
};
/**
 * @param {?proto.dasha.sdk.TextNluServiceIntentRecognition|undefined} value
 * @return {!proto.dasha.sdk.TextNluServiceRecognition} returns this
*/
proto.dasha.sdk.TextNluServiceRecognition.prototype.setIntentrecognition = function (value) {
    return jspb.Message.setOneofWrapperField(this, 2, proto.dasha.sdk.TextNluServiceRecognition.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.TextNluServiceRecognition} returns this
 */
proto.dasha.sdk.TextNluServiceRecognition.prototype.clearIntentrecognition = function () {
    return this.setIntentrecognition(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.TextNluServiceRecognition.prototype.hasIntentrecognition = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.TextNluServiceDataRecognition.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.TextNluServiceDataRecognition.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.TextNluServiceDataRecognition} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.TextNluServiceDataRecognition.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: jspb.Message.getFieldWithDefault(msg, 1, ""),
            skill: jspb.Message.getFieldWithDefault(msg, 2, ""),
            dataName: jspb.Message.getFieldWithDefault(msg, 3, ""),
            dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, undefined) : []
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.TextNluServiceDataRecognition}
 */
proto.dasha.sdk.TextNluServiceDataRecognition.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.TextNluServiceDataRecognition;
    return proto.dasha.sdk.TextNluServiceDataRecognition.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.TextNluServiceDataRecognition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.TextNluServiceDataRecognition}
 */
proto.dasha.sdk.TextNluServiceDataRecognition.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setSkill(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setDataName(value);
                break;
            case 4:
                var value = msg.getDataMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.TextNluServiceDataRecognition.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.TextNluServiceDataRecognition.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.TextNluServiceDataRecognition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.TextNluServiceDataRecognition.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getType();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getSkill();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getDataName();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getDataMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
};
/**
 * optional string type = 1;
 * @return {string}
 */
proto.dasha.sdk.TextNluServiceDataRecognition.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TextNluServiceDataRecognition} returns this
 */
proto.dasha.sdk.TextNluServiceDataRecognition.prototype.setType = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string skill = 2;
 * @return {string}
 */
proto.dasha.sdk.TextNluServiceDataRecognition.prototype.getSkill = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TextNluServiceDataRecognition} returns this
 */
proto.dasha.sdk.TextNluServiceDataRecognition.prototype.setSkill = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string data_name = 3;
 * @return {string}
 */
proto.dasha.sdk.TextNluServiceDataRecognition.prototype.getDataName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TextNluServiceDataRecognition} returns this
 */
proto.dasha.sdk.TextNluServiceDataRecognition.prototype.setDataName = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * map<string, string> data = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.dasha.sdk.TextNluServiceDataRecognition.prototype.getDataMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 4, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.dasha.sdk.TextNluServiceDataRecognition} returns this
 */
proto.dasha.sdk.TextNluServiceDataRecognition.prototype.clearDataMap = function () {
    this.getDataMap().clear();
    return this;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.TextNluServiceIntentRecognition.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.TextNluServiceIntentRecognition.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.TextNluServiceIntentRecognition} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.TextNluServiceIntentRecognition.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: jspb.Message.getFieldWithDefault(msg, 1, ""),
            skill: jspb.Message.getFieldWithDefault(msg, 2, ""),
            state: jspb.Message.getFieldWithDefault(msg, 3, ""),
            sentencetype: jspb.Message.getFieldWithDefault(msg, 4, ""),
            intent: jspb.Message.getFieldWithDefault(msg, 5, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.TextNluServiceIntentRecognition}
 */
proto.dasha.sdk.TextNluServiceIntentRecognition.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.TextNluServiceIntentRecognition;
    return proto.dasha.sdk.TextNluServiceIntentRecognition.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.TextNluServiceIntentRecognition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.TextNluServiceIntentRecognition}
 */
proto.dasha.sdk.TextNluServiceIntentRecognition.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setSkill(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setState(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setSentencetype(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setIntent(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.TextNluServiceIntentRecognition.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.TextNluServiceIntentRecognition.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.TextNluServiceIntentRecognition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.TextNluServiceIntentRecognition.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getType();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getSkill();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getState();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getSentencetype();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
    f = message.getIntent();
    if (f.length > 0) {
        writer.writeString(5, f);
    }
};
/**
 * optional string type = 1;
 * @return {string}
 */
proto.dasha.sdk.TextNluServiceIntentRecognition.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TextNluServiceIntentRecognition} returns this
 */
proto.dasha.sdk.TextNluServiceIntentRecognition.prototype.setType = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string skill = 2;
 * @return {string}
 */
proto.dasha.sdk.TextNluServiceIntentRecognition.prototype.getSkill = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TextNluServiceIntentRecognition} returns this
 */
proto.dasha.sdk.TextNluServiceIntentRecognition.prototype.setSkill = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string state = 3;
 * @return {string}
 */
proto.dasha.sdk.TextNluServiceIntentRecognition.prototype.getState = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TextNluServiceIntentRecognition} returns this
 */
proto.dasha.sdk.TextNluServiceIntentRecognition.prototype.setState = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional string sentenceType = 4;
 * @return {string}
 */
proto.dasha.sdk.TextNluServiceIntentRecognition.prototype.getSentencetype = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TextNluServiceIntentRecognition} returns this
 */
proto.dasha.sdk.TextNluServiceIntentRecognition.prototype.setSentencetype = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
/**
 * optional string intent = 5;
 * @return {string}
 */
proto.dasha.sdk.TextNluServiceIntentRecognition.prototype.getIntent = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TextNluServiceIntentRecognition} returns this
 */
proto.dasha.sdk.TextNluServiceIntentRecognition.prototype.setIntent = function (value) {
    return jspb.Message.setProto3StringField(this, 5, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.NluServiceInitializeRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.NluServiceInitializeRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.NluServiceInitializeRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.NluServiceInitializeRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            customIntents: (f = msg.getCustomIntents()) && proto.dasha.sdk.NluServiceCustomIntents.toObject(includeInstance, f),
            nluContent: msg.getNluContent_asB64()
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.NluServiceInitializeRequest}
 */
proto.dasha.sdk.NluServiceInitializeRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.NluServiceInitializeRequest;
    return proto.dasha.sdk.NluServiceInitializeRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.NluServiceInitializeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.NluServiceInitializeRequest}
 */
proto.dasha.sdk.NluServiceInitializeRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.dasha.sdk.NluServiceCustomIntents;
                reader.readMessage(value, proto.dasha.sdk.NluServiceCustomIntents.deserializeBinaryFromReader);
                msg.setCustomIntents(value);
                break;
            case 2:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.setNluContent(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.NluServiceInitializeRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.NluServiceInitializeRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.NluServiceInitializeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.NluServiceInitializeRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCustomIntents();
    if (f != null) {
        writer.writeMessage(1, f, proto.dasha.sdk.NluServiceCustomIntents.serializeBinaryToWriter);
    }
    f = message.getNluContent_asU8();
    if (f.length > 0) {
        writer.writeBytes(2, f);
    }
};
/**
 * optional NluServiceCustomIntents custom_intents = 1;
 * @return {?proto.dasha.sdk.NluServiceCustomIntents}
 */
proto.dasha.sdk.NluServiceInitializeRequest.prototype.getCustomIntents = function () {
    return /** @type{?proto.dasha.sdk.NluServiceCustomIntents} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.NluServiceCustomIntents, 1));
};
/**
 * @param {?proto.dasha.sdk.NluServiceCustomIntents|undefined} value
 * @return {!proto.dasha.sdk.NluServiceInitializeRequest} returns this
*/
proto.dasha.sdk.NluServiceInitializeRequest.prototype.setCustomIntents = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.NluServiceInitializeRequest} returns this
 */
proto.dasha.sdk.NluServiceInitializeRequest.prototype.clearCustomIntents = function () {
    return this.setCustomIntents(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.NluServiceInitializeRequest.prototype.hasCustomIntents = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bytes nlu_content = 2;
 * @return {!(string|Uint8Array)}
 */
proto.dasha.sdk.NluServiceInitializeRequest.prototype.getNluContent = function () {
    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * optional bytes nlu_content = 2;
 * This is a type-conversion wrapper around `getNluContent()`
 * @return {string}
 */
proto.dasha.sdk.NluServiceInitializeRequest.prototype.getNluContent_asB64 = function () {
    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getNluContent()));
};
/**
 * optional bytes nlu_content = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNluContent()`
 * @return {!Uint8Array}
 */
proto.dasha.sdk.NluServiceInitializeRequest.prototype.getNluContent_asU8 = function () {
    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getNluContent()));
};
/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.dasha.sdk.NluServiceInitializeRequest} returns this
 */
proto.dasha.sdk.NluServiceInitializeRequest.prototype.setNluContent = function (value) {
    return jspb.Message.setProto3BytesField(this, 2, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.NluServiceCustomIntents.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.NluServiceCustomIntents.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.NluServiceCustomIntents} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.NluServiceCustomIntents.toObject = function (includeInstance, msg) {
        var f, obj = {
            includesMap: (f = msg.getIncludesMap()) ? f.toObject(includeInstance, proto.dasha.sdk.ListOfString.toObject) : [],
            excludesMap: (f = msg.getExcludesMap()) ? f.toObject(includeInstance, proto.dasha.sdk.ListOfString.toObject) : [],
            language: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.NluServiceCustomIntents}
 */
proto.dasha.sdk.NluServiceCustomIntents.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.NluServiceCustomIntents;
    return proto.dasha.sdk.NluServiceCustomIntents.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.NluServiceCustomIntents} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.NluServiceCustomIntents}
 */
proto.dasha.sdk.NluServiceCustomIntents.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = msg.getIncludesMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.dasha.sdk.ListOfString.deserializeBinaryFromReader, "", new proto.dasha.sdk.ListOfString());
                });
                break;
            case 2:
                var value = msg.getExcludesMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.dasha.sdk.ListOfString.deserializeBinaryFromReader, "", new proto.dasha.sdk.ListOfString());
                });
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setLanguage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.NluServiceCustomIntents.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.NluServiceCustomIntents.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.NluServiceCustomIntents} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.NluServiceCustomIntents.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getIncludesMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.dasha.sdk.ListOfString.serializeBinaryToWriter);
    }
    f = message.getExcludesMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.dasha.sdk.ListOfString.serializeBinaryToWriter);
    }
    f = message.getLanguage();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
};
/**
 * map<string, ListOfString> includes = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.dasha.sdk.ListOfString>}
 */
proto.dasha.sdk.NluServiceCustomIntents.prototype.getIncludesMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.dasha.sdk.ListOfString>} */ (jspb.Message.getMapField(this, 1, opt_noLazyCreate, proto.dasha.sdk.ListOfString));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.dasha.sdk.NluServiceCustomIntents} returns this
 */
proto.dasha.sdk.NluServiceCustomIntents.prototype.clearIncludesMap = function () {
    this.getIncludesMap().clear();
    return this;
};
/**
 * map<string, ListOfString> excludes = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.dasha.sdk.ListOfString>}
 */
proto.dasha.sdk.NluServiceCustomIntents.prototype.getExcludesMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.dasha.sdk.ListOfString>} */ (jspb.Message.getMapField(this, 2, opt_noLazyCreate, proto.dasha.sdk.ListOfString));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.dasha.sdk.NluServiceCustomIntents} returns this
 */
proto.dasha.sdk.NluServiceCustomIntents.prototype.clearExcludesMap = function () {
    this.getExcludesMap().clear();
    return this;
};
/**
 * optional string language = 3;
 * @return {string}
 */
proto.dasha.sdk.NluServiceCustomIntents.prototype.getLanguage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.NluServiceCustomIntents} returns this
 */
proto.dasha.sdk.NluServiceCustomIntents.prototype.setLanguage = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dasha.sdk.ListOfString.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.ListOfString.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.ListOfString.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.ListOfString} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.ListOfString.toObject = function (includeInstance, msg) {
        var f, obj = {
            valuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.ListOfString}
 */
proto.dasha.sdk.ListOfString.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.ListOfString;
    return proto.dasha.sdk.ListOfString.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.ListOfString} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.ListOfString}
 */
proto.dasha.sdk.ListOfString.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addValues(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.ListOfString.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.ListOfString.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.ListOfString} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.ListOfString.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getValuesList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
};
/**
 * repeated string values = 1;
 * @return {!Array<string>}
 */
proto.dasha.sdk.ListOfString.prototype.getValuesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.dasha.sdk.ListOfString} returns this
 */
proto.dasha.sdk.ListOfString.prototype.setValuesList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dasha.sdk.ListOfString} returns this
 */
proto.dasha.sdk.ListOfString.prototype.addValues = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dasha.sdk.ListOfString} returns this
 */
proto.dasha.sdk.ListOfString.prototype.clearValuesList = function () {
    return this.setValuesList([]);
};
goog.object.extend(exports, proto.dasha.sdk);
//# sourceMappingURL=nlu-service_pb.js.map