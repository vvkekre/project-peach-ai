"use strict";
// source: external-client-tts.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();
var sdk_pb = require('./sdk_pb.js');
goog.object.extend(proto, sdk_pb);
goog.exportSymbol('proto.dasha.sdk.ExternalClientTtsError', null, global);
goog.exportSymbol('proto.dasha.sdk.ExternalClientTtsProtocolMessage', null, global);
goog.exportSymbol('proto.dasha.sdk.ExternalClientTtsProtocolStreamInit', null, global);
goog.exportSymbol('proto.dasha.sdk.ExternalClientTtsResponse', null, global);
goog.exportSymbol('proto.dasha.sdk.ExternalClientTtsResponse.MessageCase', null, global);
goog.exportSymbol('proto.dasha.sdk.ExternalClientTtsSuccessResponse', null, global);
goog.exportSymbol('proto.dasha.sdk.VoiceInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.ExternalClientTtsSuccessResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.ExternalClientTtsSuccessResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.ExternalClientTtsSuccessResponse.displayName = 'proto.dasha.sdk.ExternalClientTtsSuccessResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.ExternalClientTtsError = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.ExternalClientTtsError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.ExternalClientTtsError.displayName = 'proto.dasha.sdk.ExternalClientTtsError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.ExternalClientTtsResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.dasha.sdk.ExternalClientTtsResponse.oneofGroups_);
};
goog.inherits(proto.dasha.sdk.ExternalClientTtsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.ExternalClientTtsResponse.displayName = 'proto.dasha.sdk.ExternalClientTtsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.ExternalClientTtsProtocolStreamInit = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.ExternalClientTtsProtocolStreamInit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.ExternalClientTtsProtocolStreamInit.displayName = 'proto.dasha.sdk.ExternalClientTtsProtocolStreamInit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.ExternalClientTtsProtocolMessage = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.ExternalClientTtsProtocolMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.ExternalClientTtsProtocolMessage.displayName = 'proto.dasha.sdk.ExternalClientTtsProtocolMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.VoiceInfo = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.VoiceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.VoiceInfo.displayName = 'proto.dasha.sdk.VoiceInfo';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.ExternalClientTtsSuccessResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.ExternalClientTtsSuccessResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.ExternalClientTtsSuccessResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.ExternalClientTtsSuccessResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            audioFormat: jspb.Message.getFieldWithDefault(msg, 1, ""),
            audioData: msg.getAudioData_asB64()
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.ExternalClientTtsSuccessResponse}
 */
proto.dasha.sdk.ExternalClientTtsSuccessResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.ExternalClientTtsSuccessResponse;
    return proto.dasha.sdk.ExternalClientTtsSuccessResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.ExternalClientTtsSuccessResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.ExternalClientTtsSuccessResponse}
 */
proto.dasha.sdk.ExternalClientTtsSuccessResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setAudioFormat(value);
                break;
            case 2:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.setAudioData(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.ExternalClientTtsSuccessResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.ExternalClientTtsSuccessResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.ExternalClientTtsSuccessResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.ExternalClientTtsSuccessResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getAudioFormat();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getAudioData_asU8();
    if (f.length > 0) {
        writer.writeBytes(2, f);
    }
};
/**
 * optional string audio_format = 1;
 * @return {string}
 */
proto.dasha.sdk.ExternalClientTtsSuccessResponse.prototype.getAudioFormat = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.ExternalClientTtsSuccessResponse} returns this
 */
proto.dasha.sdk.ExternalClientTtsSuccessResponse.prototype.setAudioFormat = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional bytes audio_data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.dasha.sdk.ExternalClientTtsSuccessResponse.prototype.getAudioData = function () {
    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * optional bytes audio_data = 2;
 * This is a type-conversion wrapper around `getAudioData()`
 * @return {string}
 */
proto.dasha.sdk.ExternalClientTtsSuccessResponse.prototype.getAudioData_asB64 = function () {
    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getAudioData()));
};
/**
 * optional bytes audio_data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAudioData()`
 * @return {!Uint8Array}
 */
proto.dasha.sdk.ExternalClientTtsSuccessResponse.prototype.getAudioData_asU8 = function () {
    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getAudioData()));
};
/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.dasha.sdk.ExternalClientTtsSuccessResponse} returns this
 */
proto.dasha.sdk.ExternalClientTtsSuccessResponse.prototype.setAudioData = function (value) {
    return jspb.Message.setProto3BytesField(this, 2, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.ExternalClientTtsError.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.ExternalClientTtsError.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.ExternalClientTtsError} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.ExternalClientTtsError.toObject = function (includeInstance, msg) {
        var f, obj = {
            message: jspb.Message.getFieldWithDefault(msg, 1, ""),
            details: jspb.Message.getFieldWithDefault(msg, 2, ""),
            type: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.ExternalClientTtsError}
 */
proto.dasha.sdk.ExternalClientTtsError.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.ExternalClientTtsError;
    return proto.dasha.sdk.ExternalClientTtsError.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.ExternalClientTtsError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.ExternalClientTtsError}
 */
proto.dasha.sdk.ExternalClientTtsError.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setDetails(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.ExternalClientTtsError.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.ExternalClientTtsError.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.ExternalClientTtsError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.ExternalClientTtsError.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMessage();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getDetails();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getType();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
};
/**
 * optional string message = 1;
 * @return {string}
 */
proto.dasha.sdk.ExternalClientTtsError.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.ExternalClientTtsError} returns this
 */
proto.dasha.sdk.ExternalClientTtsError.prototype.setMessage = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string details = 2;
 * @return {string}
 */
proto.dasha.sdk.ExternalClientTtsError.prototype.getDetails = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.ExternalClientTtsError} returns this
 */
proto.dasha.sdk.ExternalClientTtsError.prototype.setDetails = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string type = 3;
 * @return {string}
 */
proto.dasha.sdk.ExternalClientTtsError.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.ExternalClientTtsError} returns this
 */
proto.dasha.sdk.ExternalClientTtsError.prototype.setType = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.dasha.sdk.ExternalClientTtsResponse.oneofGroups_ = [[4, 5]];
/**
 * @enum {number}
 */
proto.dasha.sdk.ExternalClientTtsResponse.MessageCase = {
    MESSAGE_NOT_SET: 0,
    SUCCESS_RESPONSE: 4,
    ERROR: 5
};
/**
 * @return {proto.dasha.sdk.ExternalClientTtsResponse.MessageCase}
 */
proto.dasha.sdk.ExternalClientTtsResponse.prototype.getMessageCase = function () {
    return /** @type {proto.dasha.sdk.ExternalClientTtsResponse.MessageCase} */ (jspb.Message.computeOneofCase(this, proto.dasha.sdk.ExternalClientTtsResponse.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.ExternalClientTtsResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.ExternalClientTtsResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.ExternalClientTtsResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.ExternalClientTtsResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            messageId: jspb.Message.getFieldWithDefault(msg, 2, ""),
            instanceId: jspb.Message.getFieldWithDefault(msg, 3, ""),
            successResponse: (f = msg.getSuccessResponse()) && proto.dasha.sdk.ExternalClientTtsSuccessResponse.toObject(includeInstance, f),
            error: (f = msg.getError()) && proto.dasha.sdk.ExternalClientTtsError.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.ExternalClientTtsResponse}
 */
proto.dasha.sdk.ExternalClientTtsResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.ExternalClientTtsResponse;
    return proto.dasha.sdk.ExternalClientTtsResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.ExternalClientTtsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.ExternalClientTtsResponse}
 */
proto.dasha.sdk.ExternalClientTtsResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setRequestId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessageId(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setInstanceId(value);
                break;
            case 4:
                var value = new proto.dasha.sdk.ExternalClientTtsSuccessResponse;
                reader.readMessage(value, proto.dasha.sdk.ExternalClientTtsSuccessResponse.deserializeBinaryFromReader);
                msg.setSuccessResponse(value);
                break;
            case 5:
                var value = new proto.dasha.sdk.ExternalClientTtsError;
                reader.readMessage(value, proto.dasha.sdk.ExternalClientTtsError.deserializeBinaryFromReader);
                msg.setError(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.ExternalClientTtsResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.ExternalClientTtsResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.ExternalClientTtsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.ExternalClientTtsResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getRequestId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getMessageId();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getInstanceId();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getSuccessResponse();
    if (f != null) {
        writer.writeMessage(4, f, proto.dasha.sdk.ExternalClientTtsSuccessResponse.serializeBinaryToWriter);
    }
    f = message.getError();
    if (f != null) {
        writer.writeMessage(5, f, proto.dasha.sdk.ExternalClientTtsError.serializeBinaryToWriter);
    }
};
/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.dasha.sdk.ExternalClientTtsResponse.prototype.getRequestId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.ExternalClientTtsResponse} returns this
 */
proto.dasha.sdk.ExternalClientTtsResponse.prototype.setRequestId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string message_id = 2;
 * @return {string}
 */
proto.dasha.sdk.ExternalClientTtsResponse.prototype.getMessageId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.ExternalClientTtsResponse} returns this
 */
proto.dasha.sdk.ExternalClientTtsResponse.prototype.setMessageId = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string instance_id = 3;
 * @return {string}
 */
proto.dasha.sdk.ExternalClientTtsResponse.prototype.getInstanceId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.ExternalClientTtsResponse} returns this
 */
proto.dasha.sdk.ExternalClientTtsResponse.prototype.setInstanceId = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional ExternalClientTtsSuccessResponse success_response = 4;
 * @return {?proto.dasha.sdk.ExternalClientTtsSuccessResponse}
 */
proto.dasha.sdk.ExternalClientTtsResponse.prototype.getSuccessResponse = function () {
    return /** @type{?proto.dasha.sdk.ExternalClientTtsSuccessResponse} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.ExternalClientTtsSuccessResponse, 4));
};
/**
 * @param {?proto.dasha.sdk.ExternalClientTtsSuccessResponse|undefined} value
 * @return {!proto.dasha.sdk.ExternalClientTtsResponse} returns this
*/
proto.dasha.sdk.ExternalClientTtsResponse.prototype.setSuccessResponse = function (value) {
    return jspb.Message.setOneofWrapperField(this, 4, proto.dasha.sdk.ExternalClientTtsResponse.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.ExternalClientTtsResponse} returns this
 */
proto.dasha.sdk.ExternalClientTtsResponse.prototype.clearSuccessResponse = function () {
    return this.setSuccessResponse(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.ExternalClientTtsResponse.prototype.hasSuccessResponse = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional ExternalClientTtsError error = 5;
 * @return {?proto.dasha.sdk.ExternalClientTtsError}
 */
proto.dasha.sdk.ExternalClientTtsResponse.prototype.getError = function () {
    return /** @type{?proto.dasha.sdk.ExternalClientTtsError} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.ExternalClientTtsError, 5));
};
/**
 * @param {?proto.dasha.sdk.ExternalClientTtsError|undefined} value
 * @return {!proto.dasha.sdk.ExternalClientTtsResponse} returns this
*/
proto.dasha.sdk.ExternalClientTtsResponse.prototype.setError = function (value) {
    return jspb.Message.setOneofWrapperField(this, 5, proto.dasha.sdk.ExternalClientTtsResponse.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.ExternalClientTtsResponse} returns this
 */
proto.dasha.sdk.ExternalClientTtsResponse.prototype.clearError = function () {
    return this.setError(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.ExternalClientTtsResponse.prototype.hasError = function () {
    return jspb.Message.getField(this, 5) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.ExternalClientTtsProtocolStreamInit.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.ExternalClientTtsProtocolStreamInit.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.ExternalClientTtsProtocolStreamInit} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.ExternalClientTtsProtocolStreamInit.toObject = function (includeInstance, msg) {
        var f, obj = {
            instanceId: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.ExternalClientTtsProtocolStreamInit}
 */
proto.dasha.sdk.ExternalClientTtsProtocolStreamInit.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.ExternalClientTtsProtocolStreamInit;
    return proto.dasha.sdk.ExternalClientTtsProtocolStreamInit.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.ExternalClientTtsProtocolStreamInit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.ExternalClientTtsProtocolStreamInit}
 */
proto.dasha.sdk.ExternalClientTtsProtocolStreamInit.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setInstanceId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.ExternalClientTtsProtocolStreamInit.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.ExternalClientTtsProtocolStreamInit.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.ExternalClientTtsProtocolStreamInit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.ExternalClientTtsProtocolStreamInit.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getInstanceId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string instance_id = 1;
 * @return {string}
 */
proto.dasha.sdk.ExternalClientTtsProtocolStreamInit.prototype.getInstanceId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.ExternalClientTtsProtocolStreamInit} returns this
 */
proto.dasha.sdk.ExternalClientTtsProtocolStreamInit.prototype.setInstanceId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.ExternalClientTtsProtocolMessage.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.ExternalClientTtsProtocolMessage.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.ExternalClientTtsProtocolMessage} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.ExternalClientTtsProtocolMessage.toObject = function (includeInstance, msg) {
        var f, obj = {
            text: jspb.Message.getFieldWithDefault(msg, 1, ""),
            messageId: jspb.Message.getFieldWithDefault(msg, 2, ""),
            requestId: jspb.Message.getFieldWithDefault(msg, 3, ""),
            voiceInfo: (f = msg.getVoiceInfo()) && proto.dasha.sdk.VoiceInfo.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.ExternalClientTtsProtocolMessage}
 */
proto.dasha.sdk.ExternalClientTtsProtocolMessage.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.ExternalClientTtsProtocolMessage;
    return proto.dasha.sdk.ExternalClientTtsProtocolMessage.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.ExternalClientTtsProtocolMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.ExternalClientTtsProtocolMessage}
 */
proto.dasha.sdk.ExternalClientTtsProtocolMessage.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setText(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessageId(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setRequestId(value);
                break;
            case 4:
                var value = new proto.dasha.sdk.VoiceInfo;
                reader.readMessage(value, proto.dasha.sdk.VoiceInfo.deserializeBinaryFromReader);
                msg.setVoiceInfo(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.ExternalClientTtsProtocolMessage.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.ExternalClientTtsProtocolMessage.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.ExternalClientTtsProtocolMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.ExternalClientTtsProtocolMessage.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getText();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getMessageId();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getRequestId();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getVoiceInfo();
    if (f != null) {
        writer.writeMessage(4, f, proto.dasha.sdk.VoiceInfo.serializeBinaryToWriter);
    }
};
/**
 * optional string text = 1;
 * @return {string}
 */
proto.dasha.sdk.ExternalClientTtsProtocolMessage.prototype.getText = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.ExternalClientTtsProtocolMessage} returns this
 */
proto.dasha.sdk.ExternalClientTtsProtocolMessage.prototype.setText = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string message_id = 2;
 * @return {string}
 */
proto.dasha.sdk.ExternalClientTtsProtocolMessage.prototype.getMessageId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.ExternalClientTtsProtocolMessage} returns this
 */
proto.dasha.sdk.ExternalClientTtsProtocolMessage.prototype.setMessageId = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string request_id = 3;
 * @return {string}
 */
proto.dasha.sdk.ExternalClientTtsProtocolMessage.prototype.getRequestId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.ExternalClientTtsProtocolMessage} returns this
 */
proto.dasha.sdk.ExternalClientTtsProtocolMessage.prototype.setRequestId = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional VoiceInfo voice_info = 4;
 * @return {?proto.dasha.sdk.VoiceInfo}
 */
proto.dasha.sdk.ExternalClientTtsProtocolMessage.prototype.getVoiceInfo = function () {
    return /** @type{?proto.dasha.sdk.VoiceInfo} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.VoiceInfo, 4));
};
/**
 * @param {?proto.dasha.sdk.VoiceInfo|undefined} value
 * @return {!proto.dasha.sdk.ExternalClientTtsProtocolMessage} returns this
*/
proto.dasha.sdk.ExternalClientTtsProtocolMessage.prototype.setVoiceInfo = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.ExternalClientTtsProtocolMessage} returns this
 */
proto.dasha.sdk.ExternalClientTtsProtocolMessage.prototype.clearVoiceInfo = function () {
    return this.setVoiceInfo(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.ExternalClientTtsProtocolMessage.prototype.hasVoiceInfo = function () {
    return jspb.Message.getField(this, 4) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.VoiceInfo.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.VoiceInfo.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.VoiceInfo} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.VoiceInfo.toObject = function (includeInstance, msg) {
        var f, obj = {
            speaker: jspb.Message.getFieldWithDefault(msg, 1, ""),
            lang: jspb.Message.getFieldWithDefault(msg, 2, ""),
            emotion: jspb.Message.getFieldWithDefault(msg, 3, ""),
            speed: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
            variation: jspb.Message.getFieldWithDefault(msg, 5, 0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.VoiceInfo}
 */
proto.dasha.sdk.VoiceInfo.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.VoiceInfo;
    return proto.dasha.sdk.VoiceInfo.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.VoiceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.VoiceInfo}
 */
proto.dasha.sdk.VoiceInfo.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setSpeaker(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setLang(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setEmotion(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setSpeed(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setVariation(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.VoiceInfo.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.VoiceInfo.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.VoiceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.VoiceInfo.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getSpeaker();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getLang();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getEmotion();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getSpeed();
    if (f !== 0.0) {
        writer.writeDouble(4, f);
    }
    f = message.getVariation();
    if (f !== 0) {
        writer.writeInt32(5, f);
    }
};
/**
 * optional string speaker = 1;
 * @return {string}
 */
proto.dasha.sdk.VoiceInfo.prototype.getSpeaker = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.VoiceInfo} returns this
 */
proto.dasha.sdk.VoiceInfo.prototype.setSpeaker = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string lang = 2;
 * @return {string}
 */
proto.dasha.sdk.VoiceInfo.prototype.getLang = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.VoiceInfo} returns this
 */
proto.dasha.sdk.VoiceInfo.prototype.setLang = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string emotion = 3;
 * @return {string}
 */
proto.dasha.sdk.VoiceInfo.prototype.getEmotion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.VoiceInfo} returns this
 */
proto.dasha.sdk.VoiceInfo.prototype.setEmotion = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional double speed = 4;
 * @return {number}
 */
proto.dasha.sdk.VoiceInfo.prototype.getSpeed = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.VoiceInfo} returns this
 */
proto.dasha.sdk.VoiceInfo.prototype.setSpeed = function (value) {
    return jspb.Message.setProto3FloatField(this, 4, value);
};
/**
 * optional int32 variation = 5;
 * @return {number}
 */
proto.dasha.sdk.VoiceInfo.prototype.getVariation = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.VoiceInfo} returns this
 */
proto.dasha.sdk.VoiceInfo.prototype.setVariation = function (value) {
    return jspb.Message.setProto3IntField(this, 5, value);
};
goog.object.extend(exports, proto.dasha.sdk);
//# sourceMappingURL=external-client-tts_pb.js.map