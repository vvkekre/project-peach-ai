// GENERATED CODE -- DO NOT EDIT!
'use strict';
var grpc = require('@grpc/grpc-js');
var external$client$tts_pb = require('./external-client-tts_pb.js');
var sdk_pb = require('./sdk_pb.js');
function serialize_dasha_sdk_Empty(arg) {
    if (!(arg instanceof sdk_pb.Empty)) {
        throw new Error('Expected argument of type dasha.sdk.Empty');
    }
    return Buffer.from(arg.serializeBinary());
}
function deserialize_dasha_sdk_Empty(buffer_arg) {
    return sdk_pb.Empty.deserializeBinary(new Uint8Array(buffer_arg));
}
function serialize_dasha_sdk_ExternalClientTtsProtocolMessage(arg) {
    if (!(arg instanceof external$client$tts_pb.ExternalClientTtsProtocolMessage)) {
        throw new Error('Expected argument of type dasha.sdk.ExternalClientTtsProtocolMessage');
    }
    return Buffer.from(arg.serializeBinary());
}
function deserialize_dasha_sdk_ExternalClientTtsProtocolMessage(buffer_arg) {
    return external$client$tts_pb.ExternalClientTtsProtocolMessage.deserializeBinary(new Uint8Array(buffer_arg));
}
function serialize_dasha_sdk_ExternalClientTtsProtocolStreamInit(arg) {
    if (!(arg instanceof external$client$tts_pb.ExternalClientTtsProtocolStreamInit)) {
        throw new Error('Expected argument of type dasha.sdk.ExternalClientTtsProtocolStreamInit');
    }
    return Buffer.from(arg.serializeBinary());
}
function deserialize_dasha_sdk_ExternalClientTtsProtocolStreamInit(buffer_arg) {
    return external$client$tts_pb.ExternalClientTtsProtocolStreamInit.deserializeBinary(new Uint8Array(buffer_arg));
}
function serialize_dasha_sdk_ExternalClientTtsResponse(arg) {
    if (!(arg instanceof external$client$tts_pb.ExternalClientTtsResponse)) {
        throw new Error('Expected argument of type dasha.sdk.ExternalClientTtsResponse');
    }
    return Buffer.from(arg.serializeBinary());
}
function deserialize_dasha_sdk_ExternalClientTtsResponse(buffer_arg) {
    return external$client$tts_pb.ExternalClientTtsResponse.deserializeBinary(new Uint8Array(buffer_arg));
}
var ExternalClientTtsProtocolService = exports.ExternalClientTtsProtocolService = {
    sendAudio: {
        path: '/dasha.sdk.ExternalClientTtsProtocol/SendAudio',
        requestStream: false,
        responseStream: false,
        requestType: external$client$tts_pb.ExternalClientTtsResponse,
        responseType: sdk_pb.Empty,
        requestSerialize: serialize_dasha_sdk_ExternalClientTtsResponse,
        requestDeserialize: deserialize_dasha_sdk_ExternalClientTtsResponse,
        responseSerialize: serialize_dasha_sdk_Empty,
        responseDeserialize: deserialize_dasha_sdk_Empty,
    },
    audioRequestStream: {
        path: '/dasha.sdk.ExternalClientTtsProtocol/AudioRequestStream',
        requestStream: false,
        responseStream: true,
        requestType: external$client$tts_pb.ExternalClientTtsProtocolStreamInit,
        responseType: external$client$tts_pb.ExternalClientTtsProtocolMessage,
        requestSerialize: serialize_dasha_sdk_ExternalClientTtsProtocolStreamInit,
        requestDeserialize: deserialize_dasha_sdk_ExternalClientTtsProtocolStreamInit,
        responseSerialize: serialize_dasha_sdk_ExternalClientTtsProtocolMessage,
        responseDeserialize: deserialize_dasha_sdk_ExternalClientTtsProtocolMessage,
    },
};
exports.ExternalClientTtsProtocolClient = grpc.makeGenericClientConstructor(ExternalClientTtsProtocolService);
//# sourceMappingURL=external-client-tts_grpc_pb.js.map