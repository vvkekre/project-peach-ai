import * as base from "./base";
import * as errors from "../errors";
import { Account } from "../account";
import { Logger } from "../log";
import * as services from "./generated/call-gateway_grpc_pb";
export declare enum TerminationReason {
    DISCONNECTED = 0,
    NOT_FOUND = 1,
    FORBIDDEN = 2
}
export declare type ConnectionStream = base.Stream<{
    error: [error: errors.Error];
    connect: [audioClientId: number];
    invite: [roomId: string, additionalInfo: string];
    join: [roomId: string, audioClientId: number];
    leave: [roomId: string, audioClientId: number];
    terminate: [roomId: string, reason: TerminationReason, details: string];
}>;
export declare class AudioGatewayProtocolClient extends base.Client<services.AudioGatewayProtocolClient> {
    constructor(account: Account, log: Logger);
    connect(request: {
        additionalInfo: string;
    }): ConnectionStream;
    inviteRequest(request: {
        roomId: string;
        additionalInfo: string;
    }): Promise<void>;
    leave(request: {
        roomId: string;
        additionalInfo: string;
    }): Promise<void>;
}
