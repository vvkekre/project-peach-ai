/// <reference types="node" />
import { Account } from "../account";
import { CancelToken } from "../cancel";
import { Logger } from "../log";
import * as base from "./base";
import * as api from "./generated/profiler";
export interface ProfilerRequest {
    applicationId: string;
    start: Date;
    end: Date;
}
export declare class ProfilerApi extends base.Api<api.ProfilerApi> {
    constructor(account: Account, log: Logger);
    generate(req: ProfilerRequest, cancelToken?: CancelToken): Promise<string>;
    download(req: ProfilerRequest, cancelToken?: CancelToken, onProgress?: (loaded: number, total: number) => void): Promise<Buffer>;
    isAvailableToDownload(req: ProfilerRequest, cancelToken?: CancelToken): Promise<boolean>;
}
