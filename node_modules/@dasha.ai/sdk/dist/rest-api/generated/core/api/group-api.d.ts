/**
 * Dasha.AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { GroupPatchDTO } from '../models';
import { GroupRequestDTO } from '../models';
import { GroupResponseDTO } from '../models';
import { GroupTemporaryCreateRequestDTO } from '../models';
/**
 * GroupApi - axios parameter creator
 * @export
 */
export declare const GroupApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {string} name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupByNameGet: (name: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupDefaultGet: (options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {boolean} [includeTemporary]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupGet: (skip?: number | undefined, take?: number | undefined, includeTemporary?: boolean | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupIdDelete: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupIdGet: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {GroupPatchDTO} [groupPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupIdPatch: (id: string, groupPatchDTO?: GroupPatchDTO | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {GroupRequestDTO} [groupRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupPost: (groupRequestDTO?: GroupRequestDTO | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {GroupTemporaryCreateRequestDTO} [groupTemporaryCreateRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupTemporaryPost: (groupTemporaryCreateRequestDTO?: GroupTemporaryCreateRequestDTO | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * GroupApi - functional programming interface
 * @export
 */
export declare const GroupApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {string} name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupByNameGet(name: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GroupResponseDTO>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupDefaultGet(options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {boolean} [includeTemporary]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupGet(skip?: number | undefined, take?: number | undefined, includeTemporary?: boolean | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Array<GroupResponseDTO>>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupIdDelete(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupIdGet(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GroupResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {GroupPatchDTO} [groupPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupIdPatch(id: string, groupPatchDTO?: GroupPatchDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GroupResponseDTO>>;
    /**
     *
     * @param {GroupRequestDTO} [groupRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupPost(groupRequestDTO?: GroupRequestDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GroupResponseDTO>>;
    /**
     *
     * @param {GroupTemporaryCreateRequestDTO} [groupTemporaryCreateRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupTemporaryPost(groupTemporaryCreateRequestDTO?: GroupTemporaryCreateRequestDTO | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GroupResponseDTO>>;
};
/**
 * GroupApi - factory interface
 * @export
 */
export declare const GroupApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @param {string} name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupByNameGet(name: string, options?: any): AxiosPromise<GroupResponseDTO>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupDefaultGet(options?: any): AxiosPromise<string>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {boolean} [includeTemporary]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupGet(skip?: number | undefined, take?: number | undefined, includeTemporary?: boolean | undefined, options?: any): AxiosPromise<Array<GroupResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupIdGet(id: string, options?: any): AxiosPromise<GroupResponseDTO>;
    /**
     *
     * @param {string} id
     * @param {GroupPatchDTO} [groupPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupIdPatch(id: string, groupPatchDTO?: GroupPatchDTO | undefined, options?: any): AxiosPromise<GroupResponseDTO>;
    /**
     *
     * @param {GroupRequestDTO} [groupRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupPost(groupRequestDTO?: GroupRequestDTO | undefined, options?: any): AxiosPromise<GroupResponseDTO>;
    /**
     *
     * @param {GroupTemporaryCreateRequestDTO} [groupTemporaryCreateRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1GroupTemporaryPost(groupTemporaryCreateRequestDTO?: GroupTemporaryCreateRequestDTO | undefined, options?: any): AxiosPromise<GroupResponseDTO>;
};
/**
 * GroupApi - object-oriented interface
 * @export
 * @class GroupApi
 * @extends {BaseAPI}
 */
export declare class GroupApi extends BaseAPI {
    /**
     *
     * @param {string} name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GroupApi
     */
    apiV1GroupByNameGet(name: string, options?: any): Promise<import("axios").AxiosResponse<GroupResponseDTO>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GroupApi
     */
    apiV1GroupDefaultGet(options?: any): Promise<import("axios").AxiosResponse<string>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {boolean} [includeTemporary]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GroupApi
     */
    apiV1GroupGet(skip?: number, take?: number, includeTemporary?: boolean, options?: any): Promise<import("axios").AxiosResponse<GroupResponseDTO[]>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GroupApi
     */
    apiV1GroupIdDelete(id: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GroupApi
     */
    apiV1GroupIdGet(id: string, options?: any): Promise<import("axios").AxiosResponse<GroupResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {GroupPatchDTO} [groupPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GroupApi
     */
    apiV1GroupIdPatch(id: string, groupPatchDTO?: GroupPatchDTO, options?: any): Promise<import("axios").AxiosResponse<GroupResponseDTO>>;
    /**
     *
     * @param {GroupRequestDTO} [groupRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GroupApi
     */
    apiV1GroupPost(groupRequestDTO?: GroupRequestDTO, options?: any): Promise<import("axios").AxiosResponse<GroupResponseDTO>>;
    /**
     *
     * @param {GroupTemporaryCreateRequestDTO} [groupTemporaryCreateRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GroupApi
     */
    apiV1GroupTemporaryPost(groupTemporaryCreateRequestDTO?: GroupTemporaryCreateRequestDTO, options?: any): Promise<import("axios").AxiosResponse<GroupResponseDTO>>;
}
